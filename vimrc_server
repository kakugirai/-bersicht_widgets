" leader
let mapleader = ' '
let g:mapleader = ' '

" enable syntatic color scheme
syntax on

" lines of history that vim will remember
set history=2000

" filetype
filetype on
" enable filetype plugins
filetype plugin on
filetype indent on

" base
" don't bother with vi compatibility
set nocompatible
" reload files when changed on disk, i.e. via `git checkout`
set autoread
set shortmess=atI

" for regular expressions turn magic on
set magic
" change the terminal's title
set title
" do not keep a backup file
set nobackup
" turn off visual bell
set novisualbell
" don't beep
set noerrorbells
" turn off error beep/flash
set visualbell t_vb=
set t_vb=
set tm=500

" hightlight column and row 
set cursorcolumn
set cursorline


" movement
set scrolloff=9


" show
" show the current row and column
set ruler
" show line numbers
set number
" display a long line in one line
set nowrap
" display incomplete commands
set showcmd
" display current modes
set showmode
" jump to matches when entering parentheses
set showmatch
" tenths of a second to show the matching parenthesis
set matchtime=2

" search
" highlight searches
set hlsearch
" search as characters are entered
set incsearch
" ignore case when searching
set ignorecase
" no ignorecase if Uppercase char present
set smartcase

" tab
" expand tabs to spaces
set expandtab
set smarttab
set shiftround

" indent
set autoindent smartindent shiftround
set shiftwidth=4
set tabstop=4
" insert mode tab and backspace use 4 spaces
set softtabstop=4

" fold
set foldenable
set foldmethod=indent
set foldlevel=99
" Use space open/closes folds
nnoremap <space> za

" disable auto_comment while pasting
augroup auto_comment
    au!
    au FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
augroup END

" paste mode setting
" automatically enter paste mode when usring ctrl+v
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

" encoding
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set termencoding=utf-8
set ffs=unix,dos,mac
set formatoptions+=m
set formatoptions+=B

" select & complete
set selection=inclusive
set selectmode=mouse,key

set completeopt=longest,menu
" show a navigable menu for tab completion
set wildmenu
set wildmode=longest,list,full
set wildignore=*.o,*~,*.pyc,*.class

" make that backspace key work the way it should
set backspace=indent,eol,start
set whichwrap+=<,>,h,l

" if this not work ,make sure .viminfo is writable for you
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" enable mouse
set mouse=a
set mousehide
" scroll in vim instead of terminal
set mouse=nicr


" =================================== theme ===================================

colorscheme molokai
let g:molokai_original = 1
let g:rehash256 = 1

" Overwirte molokai background
hi Normal ctermbg=none
hi NonText ctermbg=none

" ================================ specific file type =========================

autocmd FileType python set tabstop=4 shiftwidth=4 expandtab ai
autocmd FileType ruby set tabstop=2 shiftwidth=2 softtabstop=2 expandtab ai
autocmd BufRead,BufNew *.md,*.mkd,*.markdown  set filetype=markdown.mkd

autocmd BufNewFile *.sh,*.py exec ":call AutoSetFileHead()"
function! AutoSetFileHead()
    " .sh
    if &filetype == 'sh'
        call setline(1, "\#!/usr/bin/env bash")
    endif

    " python
    if &filetype == 'python'
        call setline(1, "\#!/usr/bin/env python")
        call append(1, "\# encoding: utf-8")
    endif

    normal G
    normal o
    normal o
endfunc

autocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun

" ============================ key map ============================

nnoremap k gk
nnoremap gk k
nnoremap j gj
nnoremap gj j

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" $/^ doesn't do anything
nnoremap $ <nop>
nnoremap ^ <nop>

nnoremap <F2> :set nu! nu?<CR>
nnoremap <F3> :set list! list?<CR>
nnoremap <F4> :set wrap! wrap?<CR>

" jk is escape
inoremap jk <esc>

" Quickly close the current window
nnoremap <leader>q :q<CR>
" Quickly save the current file
nnoremap <leader>w :w<CR>

" select all
map <Leader>sa ggVG"

" remap U to <C-r> for easier redo
nnoremap U <C-r>

" Swap implementations of ` and ' jump to markers
" By default, ' jumps to the marked line, ` jumps to the marked line and
" column, so swap them
nnoremap ' `
nnoremap ` '

" switch # *
" nnoremap # *
" nnoremap * #

"Keep search pattern at the center of the screen."
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz

" Turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

" y$ -> Y Make Y behave like other capitals
map Y y$

" use W to save as sudo
command W :execute ':silent w !sudo tee % > /dev/null' | :edit!
